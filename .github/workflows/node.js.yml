# 命名work flow
name: Node.js CI

# 觸發條件 on
# push到 main, 或是 pull request 到main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# work flow 的任務
jobs:
  # 隨意命名
  build:
    # 指定運行環境  將虛擬機設定為ubuntu
    runs-on: ubuntu-latest

    # 設定策略 以便在不同的配置下運行任務
    strategy:
      matrix:
        node-version: [21, 22]

    # 步驟
    steps:
    # uses：指定使用 GitHub Actions 的一個操作。在這裡，使用 actions/checkout@v2 來檢出當前的代碼庫。
    - uses: actions/checkout@v2

    # name：指定這一步的名稱。在這裡，我們動態設置 Node.js 版本，名稱為 "Use Node.js 版本"。
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2

      # with 提供這個操作所需的參數  node-version：設置 Node.js 版本，使用矩陣中定義的版本。
      with:
        node-version: ${{ matrix.node-version }}
      
      # 安裝 依賴  也可以用 npm ci
    - run: npm ci

      # 執行測試
    - run: npm test

    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage
    # 佈署  以heroku 為例子    
    # - name: Deploy to Heroku
    # if: github.ref == 'refs/heads/main' && success()
    # env:
    #   HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    # run: |
    #   git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
    #   git push heroku main

    - name: Upload test results
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results.xml
